import React, { useState } from 'react';
import { View, Text, TouchableOpacity, ScrollView } from 'react-native';
import { MaterialIcons } from '@expo/vector-icons';
import { useRouter } from 'expo-router';
import InfoModal from '@/app/components/Hint';
import TestComponent from '@/app/components/TestComponent';

interface AccordionItem {
  id: string;
  title: string;
  content: string;
}

const InvestmentsPage: React.FC = () => {

    const [showTest, setShowTest] = useState(false);

  const sampleQuestions = [
    {
      id: 1,
      question: "–ö–∞–∫–æ–≤ –≤–∞—à —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç (–≥–æ–¥—ã)?",
      options: ["–ê: 18-29", "–í: 30-39", "–°: 40-49", "D: 50-59", "E: 60 –∏ —Å—Ç–∞—Ä—à–µ"],
      correctAnswer: 0
    },
    {
      id: 2,
      question: "–ö–∞–∫–æ–π —É –≤–∞—Å –æ–ø—ã—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?",
      options: ["–ù–æ–≤–∏—á–æ–∫", "1-3 –≥–æ–¥–∞", "3-5 –ª–µ—Ç", "5-10 –ª–µ—Ç", "–ë–æ–ª–µ–µ 10 –ª–µ—Ç"],
      correctAnswer: 2
    },
    {
      id: 3,
      question: "–ö–∞–∫—É—é —Å—É–º–º—É –≤—ã –≥–æ—Ç–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?",
      options: ["–î–æ 100 000‚ÇΩ", "100 000 - 500 000‚ÇΩ", "500 000 - 1 000 000‚ÇΩ", "–ë–æ–ª–µ–µ 1 000 000‚ÇΩ"],
      correctAnswer: 1
    },
    {
      id: 4,
      question: "–ö–∞–∫ –¥–æ–ª–≥–æ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?",
      options: ["–î–æ 1 –≥–æ–¥–∞", "1-3 –≥–æ–¥–∞", "3-5 –ª–µ—Ç", "5-10 –ª–µ—Ç", "–ë–æ–ª–µ–µ 10 –ª–µ—Ç"],
      correctAnswer: 3
    },
    {
      id: 5,
      question: "–ö–∞–∫ –≤—ã –æ—Ç—Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ –Ω–∞ –ø–∞–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–∞ 20%?",
      options: [
        "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–¥–∞–º –≤—Å–µ –∞–∫—Ç–∏–≤—ã",
        "–ë—É–¥—É –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è, –Ω–æ –Ω–µ –ø—Ä–æ–¥–∞–º",
        "–ü–æ–¥–æ–∂–¥—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è",
        "–î–æ–∫—É–ø–ª—é –µ—â–µ –∞–∫—Ç–∏–≤–æ–≤",
        "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è"
      ],
      correctAnswer: 2
    }
  ];

  const handleTestComplete = (result: any) => {
    console.log('Test completed:', result);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  };



  const [expandedItems, setExpandedItems] = useState<string[]>([]);
  const router = useRouter();

  const [modalVisible, setModalVisible] = useState(false);

  const openModal = () => setModalVisible(true);
  const closeModal = () => setModalVisible(false);

  const markdownContent = `
## –î–æ—Ö–æ–¥—ã üí∞

### –ê–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥
**–ê–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥** - –¥–µ–Ω—å–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –∑–∞ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É (–∑–∞—Ä–ø–ª–∞—Ç–∞, —Ñ—Ä–∏–ª–∞–Ω—Å, –±–∏–∑–Ω–µ—Å). –ë–µ–∑ —Ç–≤–æ–µ–≥–æ —É—á–∞—Å—Ç–∏—è –¥–æ—Ö–æ–¥–æ–≤ –Ω–µ—Ç.

### –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥  
**–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥** - –¥–µ–Ω—å–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –±–µ–∑ —Ç–≤–æ–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—Ä—É–¥–∞ (–¥–∏–≤–∏–¥–µ–Ω–¥—ã, –∞—Ä–µ–Ω–¥–∞, –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –≤–∫–ª–∞–¥–∞–º). –ß–µ–º –±–æ–ª—å—à–µ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞, —Ç–µ–º –±–ª–∏–∂–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å–≤–æ–±–æ–¥–∞.

### –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞
**–î–æ—Ö–æ–¥** - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞—Ä–ø–ª–∞—Ç–∞. –ï—Å—Ç—å –º–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–∞—Ç—å –¥–µ–Ω—å–≥–∏: –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∞–∫—Ü–∏–∏, –¥–æ—Ö–æ–¥—ã –æ—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:

#### 1. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –¥–æ—Ö–æ–¥—ã:
- –ó–∞—Ä–ø–ª–∞—Ç–∞, –ø–µ–Ω—Å–∏—è, –∞—Ä–µ–Ω–¥–∞ –∏–ª–∏ –ø–ª–∞—Ç–∞
- *–°—Ç–æ–∏—Ç —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –¥–æ—Ö–æ–¥–æ–≤*

#### 2. –ù–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –¥–æ—Ö–æ–¥—ã:
- –ü–æ–¥–∞—Ä–∫–∏, –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞  
- *–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –¥–æ—Ö–æ–¥—ã –≤ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏*

---

> üí° **–°–æ–≤–µ—Ç**: –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
`;

  const accordionData: AccordionItem[] = [
    {
      id: '1',
      title: '–†–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞',
      content: '–≠—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä –≥–æ—Ç–æ–≤ —Ä–∏—Å–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏–º–∏ –¥–µ–Ω—å–≥–∞–º–∏ —Ä–∞–¥–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π. –û–Ω –≤–ª–∏—è–µ—Ç –Ω–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∏—Å–∫–∏, –µ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π, –æ–ø—ã—Ç–∞ –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –†–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.'
    },
    {
      id: '2',
      title: '–í–∏–¥—ã —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª–µ–π',
      content: '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏, –Ω–µ–±–æ–ª—å—à–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å. –£–º–µ—Ä–µ–Ω–Ω—ã–π - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏. –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π - –≤—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏ —Ä–∞–¥–∏ –≤—ã—Å–æ–∫–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏.'
    },
    {
      id: '3',
      title: '–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?',
      content: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–∏–º —Ü–µ–ª—è–º, –≤—Ä–µ–º–µ–Ω–Ω–æ–º—É –≥–æ—Ä–∏–∑–æ–Ω—Ç—É –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∏—Å–∫–∞–º. –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è.'
    }
  ];

  const toggleExpanded = (itemId: string) => {
    setExpandedItems(prev => 
      prev.includes(itemId) 
        ? prev.filter(id => id !== itemId)
        : [...prev, itemId]
    );
  };

  const isExpanded = (itemId: string) => expandedItems.includes(itemId);

    if (showTest) {
    return (
      <TestComponent
        questions={sampleQuestions}
        testTitle="–¢–µ—Å—Ç"
        onClose={() => setShowTest(false)}
        onComplete={handleTestComplete}
      />
    );
  }

  return (
  <View className="flex-1 bg-black">
      {/* Header */}
      <View className="flex-row items-start justify-between px-4 py-3 pb-6">
        <Text className="text-white text-xl font-['SFProDisplaySemiBold']">
          –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
        </Text>
        <TouchableOpacity className="p-1" onPress={openModal}>
          <MaterialIcons name="info-outline" size={24} color="#9CA3AF" />
        </TouchableOpacity>
      </View>

      {/* Content */}
      <ScrollView className="flex-1 px-4" showsVerticalScrollIndicator={false}>
        {accordionData.map((item) => (
          <View key={item.id} className="mb-3">
            <TouchableOpacity
              onPress={() => toggleExpanded(item.id)}
              className="bg-[#333333] rounded-xl p-4 flex-row items-center justify-between"
              activeOpacity={0.7}
            >
              <Text className="text-white text-base font-medium flex-1 mr-3 font-['SFProDisplayRegular']">
                {item.title}
              </Text>
              <View className="ml-2">
                <MaterialIcons 
                  name={isExpanded(item.id) ? "keyboard-arrow-up" : "keyboard-arrow-down"} 
                  size={24} 
                  color="#9CA3AF" 
                />
              </View>
            </TouchableOpacity>
            
            {isExpanded(item.id) && (
              <View className="bg-[#333333] rounded-b-lg px-4 pb-4 -mt-2">
               
                <Text className="text-gray-300 text-sm leading-6 font-['SFProDisplayRegular']">
                  {item.content}
                </Text>
              </View>
            )}
          </View>
        ))}
      </ScrollView>

      {/* Bottom Button */}
      <View className="px-4 pb-8 pt-4">
        <TouchableOpacity 
          className="bg-green-600 rounded-xl py-4 items-center"
          activeOpacity={0.8}
          onPress={() => setShowTest(true)}
        >
          <Text className="text-white text-base font-semibold font-['SFProDisplayRegular']">
            –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç
          </Text>
        </TouchableOpacity>
      </View>

      <InfoModal 
        visible={modalVisible} 
        onClose={closeModal}
        title="–ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–æ –¥–æ—Ö–æ–¥—ã"
        content={markdownContent}
        linkUrl="https://web.telegram.org/a/#-1002352034763_2"
        linkText="–í–∏–¥–µ–æ—É—Ä–æ–∫ –Ω–∞ Telegram"
      />
    </View>
  );
};

export default InvestmentsPage;